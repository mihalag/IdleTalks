// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Data.Entity.Infrastructure;
using System.Linq.Expressions;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace IdleTalks.DA
{
    // User
    [GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.17.0.0")]
    public class User
    {
        public long Id { get; set; } // Id (Primary key via unique index PK_User_id)
        public string FirstName { get; set; } // FirstName
        public string LastName { get; set; } // LastName
        public DateTime? BirthDay { get; set; } // BirthDay
        public string Password { get; set; } // Password
        public long? MoodId { get; set; } // MoodId

        // Reverse navigation
        public virtual ICollection<Conversation> Conversations_UserOneId { get; set; } // Conversation.FK_Conversation_UserOne
        public virtual ICollection<Conversation> Conversations_UserTwoId { get; set; } // Conversation.FK_Conversation_UserTwo
        public virtual ICollection<Note> Notes { get; set; } // Note.FK_Note_User
        public virtual Mood Mood { get; set; } // Mood.FK_Mood_User
        
        public User()
        {
            Conversations_UserOneId = new List<Conversation>();
            Conversations_UserTwoId = new List<Conversation>();
            Notes = new List<Note>();
        }
    }

}
// </auto-generated>
